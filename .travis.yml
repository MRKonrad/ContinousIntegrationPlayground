# ContinousIntegrationPlayground

sudo: false

language: cpp

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

# Blacklist
branches:
  # for the documentation
  except:
    - gh-pages

# Environment variables
env:
  global:
    - GH_REPO_NAME: ContinousIntegrationPlayground
    - DOXYFILE: $TRAVIS_BUILD_DIR/Doxyfile
    - GH_REPO_REF: github.com/MRKonrad/ContinousIntegrationPlayground.git

addons:
  apt:
    sources:
      # coveralls only in linux
      - ubuntu-toolchain-r-test
#      - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++" ]; then
#          ubuntu-toolchain-r-test;
#        fi
    packages:
      # for the documentation
      - doxygen
      - doxygen-doc
      - doxygen-latex
      - doxygen-gui
      - graphviz
#      - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++" ]; then
#          doxygen;
#          doxygen-doc;
#          doxygen-latex;
#          doxygen-gui;
#          graphviz;
#        fi

before_install:
  - echo $LANG
  - echo $LC_ALL
  - cd ${TRAVIS_BUILD_DIR}
  - ls ${TRAVIS_BUILD_DIR}

  # coveralls only in linux
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++" ]; then
      pip install --user cpp-coveralls;
    fi

script:
  # configure and generate
  - cmake .

  # add coverage option for coveralls (only in linux g++)
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++" ]; then
      cmake -DCOVERAGE=1 . ;
    fi

  # this is make
  - make -j8
  - cmake --build .

  # needed to get the coverage
  - ./runUnitTests

after_success:
  # coveralls only in linux g++
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++" ]; then
      coveralls --root . --exclude thirdParty -E ".*CMakeFiles.*" ;
    fi

  - ls ${TRAVIS_BUILD_DIR}
  # Generate and deploy documentation
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++" ]; then
      cd $TRAVIS_BUILD_DIR;
      chmod +x generateDocumentationAndDeploy.sh;
      ./generateDocumentationAndDeploy.sh;
    fi
